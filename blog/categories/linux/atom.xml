<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 风依旧]]></title>
  <link href="http://windstill.me/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://windstill.me/"/>
  <updated>2014-10-15T17:42:56+08:00</updated>
  <id>http://windstill.me/</id>
  <author>
    <name><![CDATA[WindStill]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA['Mysql2::Error: Got Error 28 From Storage Engine'问题解决]]></title>
    <link href="http://windstill.me/blog/2014/07/02/mysql2-error-28-storage-enginewen/"/>
    <updated>2014-07-02T10:35:17+08:00</updated>
    <id>http://windstill.me/blog/2014/07/02/mysql2-error-28-storage-enginewen</id>
    <content type="html"><![CDATA[<h3>问题原因</h3>

<p>今天发现MySQL数据库中没有写入新数据，于是看了下Rails后端的日志，发现报了一个<code>Error: Mysql2::Error: Got error 28 from storage engine: SHOW FULL FIELDS FROM plays</code>错误。网上搜了一通说是空间不足造成的。</p>

<!--more-->


<p>使用 <code>df -h</code> 命令，结果如下：</p>

<p>```
root@windstill:/# df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/windstill-root</p>

<pre><code>                   28G   28G    0G   0% /
</code></pre>

<p>none                   16G  220K   16G   1% /dev
none                   16G     0   16G   0% /dev/shm
none                   16G   52K   16G   1% /var/run
none                   16G     0   16G   0% /var/lock
/dev/mapper/windstill-data_backup</p>

<pre><code>                   28G   16G   11G  59% /data_backup
</code></pre>

<p>/dev/mapper/windstill-mysql</p>

<pre><code>                   65G   15G   47G  24% /mysql
</code></pre>

<p>/dev/mapper/windstill-opt</p>

<pre><code>                   28G   15G   12G  55% /opt
</code></pre>

<p>/dev/mapper/windstill-redis</p>

<pre><code>                   28G   17G  9.8G  63% /redis
</code></pre>

<p>/dev/mapper/windstill-prod</p>

<pre><code>                   28G   13G   14G  50% /prod
</code></pre>

<p>/dev/mapper/windstill-mongodb</p>

<pre><code>                   65G   50G   12G  82% /mongodb
</code></pre>

<p>```</p>

<p>可以看出 <code>/mysql</code> 空间还是很足的，还有47G空间可用，那是什么原因呢。随着深入了解，原来MySQL查询的时候会生成一些临时的表，在默认的配置里，这些表会被创建在 <code>/</code> 挂载点（目录）中。再结合上述结果中，我的 <code>/</code> 已经没有可用空间了，那这就是问题所在了。</p>

<h3>解决方法</h3>

<p>既然知道问题的原因是 <code>/</code> 空间不足，那么解决方法就是清理 <code>/</code> 无用的文件。
使用 <code>ls -alh</code> 命令，结果如下：</p>

<p><code>
-rw-r--r--  1 nobody   root     15G 2014-07-02 11:04 nginx.access.log
-rw-r--r--  1 nobody   root      2G 2014-07-02 11:04 nginx_assets.error.log
</code>
发现nginx的log文件都太大，于是使用 <code>rm</code> 命令把他们一一删除了。但是另外的一个小问题出现了，我再次使用 <code>df -h</code> 命令发现 <code>/</code> 可用空间仍然是0。</p>

<p>后来了解到，在Linux或者Unix系统中，通过rm或者文件管理器删除文件将会从文件系统的目录结构上解除链接(unlink)。然而如果文件是被打开的（有一个进程正在使用），那么进程将仍然可以读取该文件，磁盘空间也一直被占用。而我删除的是Nginx的log文件，删除的时候文件应该正在被使用。</p>

<p>通过 <code>lsof |grep deleted</code> 命令可以获得一个已经被删除但是仍然被应用程序占用的文件列表，如下所示：</p>

<p><code>
root@windstill:/# lsof |grep deleted
nginx      6316   nobody    3w      REG              251,4 15966896128    1471723 /tmp/nginx.access.log (deleted)
nginx      6316   nobody    4w      REG              251,4  2815307776    1471730 /tmp/nginx.error.log (deleted)
</code></p>

<p>从输出结果可以看到log文件还在被使用，未被释放空间。一种方法是kill掉Nginx进程，让os自动回收磁盘空间。但这种方法显然不好，会影响线上应用。索性Nginx有个重新打开日志文件的方法：<br/>
<code>
nginx -s reopen
</code></p>

<p>至此，所有问题都解决了。</p>

<h3>参考文章</h3>

<ul>
<li><a href="http://serverfault.com/questions/399068/got-error-28-from-storage-engine-disk-full-but-my-disk-are-not-full">Got error 28 from storage engine (disk full) but my disk are not full</a></li>
<li><a href="http://blog.csdn.net/wyzxg/article/details/4971843">linux删除文件后没有释放空间</a></li>
<li><a href="http://blog.csdn.net/dbanote/article/details/17169759">Nginx在Linux下的启动、停止和重加载</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux设置系统时间和硬件时间]]></title>
    <link href="http://windstill.me/blog/2014/01/02/linux-set-time/"/>
    <updated>2014-01-02T11:46:08+08:00</updated>
    <id>http://windstill.me/blog/2014/01/02/linux-set-time</id>
    <content type="html"><![CDATA[<p>今天发现我们测试环境的服务器时间不对，居然超前了。然后谷歌了下linux系统相的关时间查看与设置。Linux时钟分为 <code>系统时钟</code>（System Clock）和 <code>硬件时钟</code>（Real Time Clock，简称RTC）。<code>系统时钟是</code>指当前Linux Kernel中的时钟，而<code>硬件时钟</code>则是主板上由电池供电的时钟，这个硬件时钟可以在BIOS中进行设置。当Linux启动时，硬件时钟会去读取系统时钟的设置，然后系统时钟就会独立于硬件运作。</p>

<!-- more -->


<p>Linux中的所有命令都是采用的系统时钟设置。在Linux中，用于时钟查看和设置的命令主要有<code>date</code>、<code>hwclock</code>和<code>clock</code>。其中，<code>clock</code>和<code>hwclock</code>用法相近，只用一个就行，只不过clock命令除了支持x86硬件体系外，还支持Alpha硬件体系。看了下我们的测试环境止只有hwclock可用，clock没有安装。</p>

<h3>1. date</h3>

<ul>
<li>查看系统时间</li>
</ul>


<p>```</p>

<h1>date</h1>

<p>```</p>

<ul>
<li>设置系统时间</li>
</ul>


<p>```</p>

<h1>date &mdash;set &ldquo;01/02/14 10:19:20&rdquo; (月/日/年 时:分:秒)</h1>

<p>```</p>

<h3>2. hwclock/clock</h3>

<ul>
<li>查看硬件时间</li>
</ul>


<p>```</p>

<h1>hwclock &mdash;show</h1>

<p>或者</p>

<h1>clock &mdash;show</h1>

<p>```</p>

<ul>
<li>设置硬件时间</li>
</ul>


<p>```</p>

<h1>hwclock &mdash;set &mdash;date=&ldquo;01/02/14 10:19:20&rdquo;  (月/日/年 时:分:秒)</h1>

<p>或者</p>

<h1>clock &mdash;set &mdash;date=&ldquo;01/02/14 10:19:20&rdquo;  (月/日/年 时:分:秒)</h1>

<p>```</p>

<h3>3. 硬件时间和系统时间的同步</h3>

<p>硬件时钟同步到系统时钟：</p>

<p>```</p>

<h1>hwclock &mdash;hctosys（hc代表硬件时间，sys代表系统时间）</h1>

<p>或者</p>

<h1>clock &mdash;hctosys</h1>

<p>```</p>

<p>系统时钟同步到硬件时钟：</p>

<p>```</p>

<h1>hwclock &mdash;systohc</h1>

<p>或者</p>

<h1>clock &mdash;systohc</h1>

<p>```</p>

<h3>4. 时区的设置</h3>

<p>```
root@testserver-01:~# tzselect
Please identify a location so that time zone rules can be set correctly.
Please select a continent or ocean.
 1) Africa
 2) Americas
 3) Antarctica
 4) Arctic Ocean
 5) Asia
 6) Atlantic Ocean
 7) Australia
 8) Europe
 9) Indian Ocean
10) Pacific Ocean
11) none &ndash; I want to specify the time zone using the Posix TZ format.</p>

<h1>? 5 (输入5，亚洲)</h1>

<p>Please select a country.
 1) Afghanistan       18) Israel            35) Palestine
 2) Armenia       19) Japan         36) Philippines
 3) Azerbaijan        20) Jordan            37) Qatar
 4) Bahrain       21) Kazakhstan        38) Russia
 5) Bangladesh        22) Korea (North)     39) Saudi Arabia
 6) Bhutan        23) Korea (South)     40) Singapore
 7) Brunei        24) Kuwait            41) Sri Lanka
 8) Cambodia          25) Kyrgyzstan        42) Syria
 9) China         26) Laos          43) Taiwan
10) Cyprus        27) Lebanon           44) Tajikistan
11) East Timor        28) Macau         45) Thailand
12) Georgia       29) Malaysia          46) Turkmenistan
13) Hong Kong         30) Mongolia          47) United Arab Emirates
14) India         31) Myanmar (Burma)       48) Uzbekistan
15) Indonesia         32) Nepal         49) Vietnam
16) Iran          33) Oman          50) Yemen
17) Iraq          34) Pakistan</p>

<h1>? 9 (输入9，中国)</h1>

<p>Please select one of the following time zone regions.
1) east China &ndash; Beijing, Guangdong, Shanghai, etc.
2) Heilongjiang (except Mohe), Jilin
3) central China &ndash; Sichuan, Yunnan, Guangxi, Shaanxi, Guizhou, etc.
4) most of Tibet &amp; Xinjiang
5) west Tibet &amp; Xinjiang</p>

<h1>? 1 (输入1，北京时间)</h1>

<p>The following information has been given:</p>

<pre><code>China
east China - Beijing, Guangdong, Shanghai, etc.
</code></pre>

<p>Therefore TZ=&lsquo;Asia/Shanghai&rsquo; will be used.
Local time is now:  Thu Jan  2 11:55:36 CST 2014.
Universal Time is now:  Thu Jan  2 03:55:36 UTC 2014.
Is the above information OK?
1) Yes
2) No</p>

<h1>? Yes</h1>

<p>Please enter 1 for Yes, or 2 for No.</p>

<h1>? 1 (输入1，确认)</h1>

<p>```</p>

<h3>参考文章</h3>

<p><a href="http://os.51cto.com/art/200703/43943.htm">Linux操作系统下的时间设置方法介绍</a></p>
]]></content>
  </entry>
  
</feed>
