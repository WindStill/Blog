<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | 风依旧]]></title>
  <link href="http://windstill.me/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://windstill.me/"/>
  <updated>2014-10-15T17:57:18+08:00</updated>
  <id>http://windstill.me/</id>
  <author>
    <name><![CDATA[WindStill]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Rails和Postgis开发基于地理位置应用的安装与配置]]></title>
    <link href="http://windstill.me/blog/2014/10/15/rails-with-postgis/"/>
    <updated>2014-10-15T15:24:58+08:00</updated>
    <id>http://windstill.me/blog/2014/10/15/rails-with-postgis</id>
    <content type="html"><![CDATA[<p><a href="http://postgis.refractions.net/"><code>PostGIS</code></a> 是关系型数据库 <a href="http://www.postgresql.org/"><code>PostgreSQL</code></a> 一个扩展，它为PostgreSQL提供了存储空间地理数据的支持，使PostgreSQL成为了一个空间数据库，能够进行空间数据管理、数量测量与几何拓扑分析。现在已经有好多为 Rails 提供地理空间数据操作的 gem。所以处理地理空间数据还是比较简单的，但是开发环境配置还有不少工作要做。</p>

<!-- more -->


<h3>环境依赖</h3>

<p>本文以 Mac OS X系统为例，需要安装以下内容：</p>

<ul>
<li> XCode</li>
<li> Homebrew</li>
<li> Postgresql</li>
<li> Postgis</li>
<li> Ruby</li>
<li> Rails</li>
</ul>


<p>下面单说 Postgresql 及 Postgis 安装</p>

<h4>安装 Postgresql 和 Postgis</h4>

<p><code>
brew install postgresql
brew install postgis
</code></p>

<h4>检查系统是否正确安装 postgis</h4>

<p><code>
~$ psql -U username
=# select pg_available_extensions where name like ‘postgis%’;
</code></p>

<p>Mac 用户还可以直接下载 <a href="http://postgresapp.com/"><code>Postgres.app</code></a>，拖入applications文件夹。Postgres.app 包含 PostgreSQL 常用的扩展和工具：</p>

<ul>
<li>PostgreSQL 9.3.5</li>
<li>PostGIS 2.1.3</li>
<li>Procedural languages: PL/pgSQL, PL/Perl, PL/Python, and PLV8 (Javascript)</li>
<li>Popular extensions, including hstore and uuid-ossp, and more</li>
<li>A number of command-line utilities for managing PostgreSQL and working with GIS data</li>
</ul>


<h3>Rails 相关配置</h3>

<h4>新建 Rails 应用</h4>

<p>先使用 postgresql 适配器新建应用（database参数可选，默认sqlite）</p>

<p><code>
rails new my_app --database=postgresql
</code></p>

<h4>配置 Gemfile</h4>

<p>打开gemfile文件，添加如下 gem ：</p>

<ul>
<li> pg</li>
<li> rgeo</li>
<li> activerecord-postgis-adapter</li>
</ul>


<p><code>
gem 'pg'
gem 'rgeo'
gem 'activerecord-postgis-adapter'
</code></p>

<h4>配置 database.yml</h4>

<p>打开 database.yml 文件，adapter 使用 postgis ：</p>

<p><code>
development:
  username:           your_username
  adapter:            postgis
  host:               localhost
  postgis_extension: postgis
  schema_search_path: public
</code>
postgis_extension 表明应用在创建数据库的时候安装 postgis extension。当执行 <code>rake db:create</code> 命令的时候，postgresql会有类似如下的操作：</p>

<p><code>
CREATE SCHEMA postgis;
CREATE EXTENSION postgis WITH SCHEMA postgis;
</code></p>

<p>如果 postgis extension 不是安装在 public schema (默认安装在 postgis schema)，还得把 postgis 的 schema 添加到 <code>schema_search_path</code>：</p>

<p><code>
development:
  schema_search_path: public, postgis
</code></p>

<p>其他支持的选项：</p>

<p><code>
development:
  adapter: postgis
  encoding: unicode
  postgis_extension: postgis      # default is postgis
  schema_search_path: public,postgis
  pool: 5
  database: my_app_development    # your database name
  username: my_app_user           # the username your app will use to connect
  password: my_app_password       # the user's password
  su_username: my_global_user     # a superuser for the database
  su_password: my_global_pasword  # the superuser's password
</code></p>

<h4>创建 model 和 table</h4>

<p><code>
rails g model earthquake location:point
</code>
要存储空间数据，必须得创建空间类型的字段。Postgis 提供了很多空间类型，包括：point, linestring, polygon以及不同类型的集合。activerecord-postgis-adapter 继承了 ActiveRecord 的 migration 句法，可以支持空间类型。</p>

<p>```
class CreateEarthquakes &lt; ActiveRecord::Migration</p>

<pre><code>def change    
    create_table :earthquakes do |t|   
        t.column :shape1, :geometry
        t.geometry :shape2
        t.line_string :path, :srid =&gt; 3785   
        t.point :location, :geographic =&gt; true
        t.point :lonlatheight, :geographic =&gt; true, :has_z =&gt; true    
        t.timestamps    
    end  

    add_index :earthquakes, :location, :spatial =&gt; true
end
</code></pre>

<p>end
```
第一个字段“shape1”，使用的是“geometry”类型，这是空间数据的基础类型（base class），表明可以容纳任何空间类型的数据。</p>

<p>第二个字段“shape2”，使用的是第一个字段定义的简写句法。</p>

<p>第三个字段“path”，使用了一个明确的几何类型 <code>line_string</code>，并且定义了srid（spatial reference ID）。表明这个字段只接受 <code>line_string</code> 类型的数据，而且SRID等于3785。</p>

<p>第四个字段“location”，是 <code>point</code>类型，同时定义了“geographic”，表明这个字段接受 经度/纬度 数据，并且以球型做相关计算（比如两点之间的距离）。</p>

<p>第五个字段“lonlatheight”，包含了“z”坐标，一般用来记录高度。</p>

<p>以下是activerecord-postgis-adapter所支持的postgis类型：</p>

<ul>
<li>:geometry &mdash; Any geometric type</li>
<li>:point &mdash; Point data</li>
<li>:line_string &mdash; LineString data</li>
<li>:polygon &mdash; Polygon data</li>
<li>:geometry_collection &mdash; Any collection type</li>
<li>:multi_point &mdash; A collection of Points</li>
<li>:multi_line_string &mdash; A collection of LineStrings</li>
<li>:multi_polygon &mdash; A collection of Polygons</li>
</ul>


<p>最后，还支持创建空间索引：</p>

<p>```
def change</p>

<pre><code>add_index :earthquakes, :location, :spatial =&gt; true
</code></pre>

<p>end
```</p>

<h4>配置 Model</h4>

<p>```
class Earthquake &lt; ActiveRecord::Base</p>

<p>  # 默认使用 Geos 空间字段实现
  self.rgeo_factory_generator = RGeo::Geos.factory_generator</p>

<p>  # 也可以设置某个字段为 geographic 空间字段实现
  set_rgeo_factory_for_column(:location, RGeo::Geographic.spherical_factory(:srid => 4326))
end
```</p>

<h3>空间数据操作</h3>

<p>一旦安装了以上gem，并且配置了数据库以及执行了migration，就可以以RGeo对象与model中的空间数据交互了。</p>

<p><a href="https://github.com/rgeo/rgeo"><code>RGeo</code></a> 是Opengis Simple Features 标准的 Ruby 实现。它是一个空间数据类型结合，包括points, lines, polygons, 和 collections。还提供标准的空间数据分析操作，比如计算交集或包含关系，计算长度或区域等等。</p>

<h4>空间数据读写</h4>

<p>```
record = Earthquake.find(1)
p = record.location                # Returns an RGeo::Feature::Point
puts p.x                           # displays the x coordinate
puts p.geometry_type.type_name     # displays &ldquo;Point&rdquo;</p>

<p>record.location = &lsquo;POINT(-122 47)&rsquo;  # sets the value with WKT string
record.save</p>

<p>factory = p.factory                # returns a spherical factory</p>

<h1>factory = Earthquake.rgeo_factory_for_column(:location)</h1>

<p>p2 = factory.point(-122, 47)       # p2 is a point in a spherical factory
record.lonlat = p2                 # sets the value to the given point
record.shape1 = p2                 # shape1 uses a flat geos factory, so it</p>

<pre><code>                               # will cast p2 into that coordinate system
                               # before setting the value
</code></pre>

<p>record.save
```</p>

<h4>空间数据查询</h4>

<p>location 距离坐标(116.458104 39.966293)一公里以内的Earthquake：</p>

<p><code>
Earthquake.where("st_dwithin(location, 'point(116.458104 39.966293)', 1000)").count
</code></p>

<h3>参考文章</h3>

<ul>
<li><a href="https://github.com/rgeo/activerecord-postgis-adapter">ActiveRecord connection adapter for PostGIS, based on postgresql and rgeo</a></li>
<li><a href="http://www.waratuman.com/2012/10/26/postgis_and_rails/">POSTGIS AND RAILS</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决ImageMagick和RMagick在OS X下使用出现的问题]]></title>
    <link href="http://windstill.me/blog/2014/07/16/imagemagick-rmagick-osx/"/>
    <updated>2014-07-16T10:50:42+08:00</updated>
    <id>http://windstill.me/blog/2014/07/16/imagemagick-rmagick-osx</id>
    <content type="html"><![CDATA[<p>每次安装 <code>RMagick</code> 这个gem都会遇到问题，并且每次的问题还都不一样，有的时候是 <code>ImageMagick</code> 的问题，有时候是 <code>RMagick</code> 不能安装，这次是安装了以后，启动Rails的时候，报错说是 <code>libMagickCore-6.Q16.2.dylib</code> 版本不对。错误详情如下：</p>

<!-- more -->


<p><code>``
/Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.12/lib/active_support/dependencies.rb:251:in</code>require': dlopen(/Users/windstill/.rvm/gems/ruby-1.9.3-p194/extensions/x86_64-darwin-13/1.9.1/rmagick-2.13.2/RMagick2.bundle, 9): Library not loaded: /usr/local/lib/libltdl.7.dylib (LoadError)
  Referenced from: /usr/local/lib/libMagickCore-6.Q16.2.dylib
  Reason: Incompatible library version: libMagickCore-6.Q16.2.dylib requires version 11.0.0 or later, but libltdl.7.dylib provides version 10.0.0 &ndash; /Users/windstill/.rvm/gems/ruby-1.9.3-p194/extensions/x86_64-darwin-13/1.9.1/rmagick-2.13.2/RMagick2.bundle</p>

<pre><code>from /Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.12/lib/active_support/dependencies.rb:251:in `block in require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.12/lib/active_support/dependencies.rb:236:in `load_dependency'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.12/lib/active_support/dependencies.rb:251:in `require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/rmagick-2.13.2/lib/rmagick.rb:11:in `&lt;top (required)&gt;'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler/runtime.rb:76:in `require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler/runtime.rb:76:in `block (2 levels) in require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler/runtime.rb:72:in `each'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler/runtime.rb:72:in `block in require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler/runtime.rb:61:in `each'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler/runtime.rb:61:in `require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194@global/gems/bundler-1.6.3/lib/bundler.rb:132:in `require'
from /Users/windstill/dev/rails/movie/config/application.rb:13:in `&lt;top (required)&gt;'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/railties-3.2.12/lib/rails/commands.rb:39:in `require'
from /Users/windstill/.rvm/gems/ruby-1.9.3-p194/gems/railties-3.2.12/lib/rails/commands.rb:39:in `&lt;top (required)&gt;'
from script/rails:6:in `require'
from script/rails:6:in `&lt;main&gt;'
</code></pre>

<p>```</p>

<p>使用 <code>brew unlink libtool &amp;&amp; brew link libtool</code> 命令解决问题。可能会出现如下问题：</p>

<p>```<br/>
Linking /usr/local/Cellar/libtool/2.4.2&hellip;
Error: Could not symlink include/ltdl.h
Target /usr/local/include/ltdl.h
already exists. You may want to remove it:
  rm /usr/local/include/ltdl.h</p>

<p>To force the link and overwrite all conflicting files:
  brew link &mdash;overwrite libtool</p>

<p>To list all files that would be deleted:
  brew link &mdash;overwrite &mdash;dry-run libtool
```</p>

<p>按照提示输入 <code>brew link --overwrite libtool</code>。</p>

<h3>参考文章</h3>

<ul>
<li><a href="http://stackoverflow.com/questions/7412208/imagemagick-and-os-x-lion-trouble">ImageMagick and OS X Lion trouble</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
